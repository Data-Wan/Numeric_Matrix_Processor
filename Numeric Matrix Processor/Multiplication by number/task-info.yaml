type: edu
custom_name: stage2
files:
- name: src/processor/Main.java
  visible: true
  text: |
    package processor;

    public class Main {
        public static void main(String[] args) {
            System.out.println("Hello World!");
        }
    }
  learner_created: false
- name: test/NumericMatrixProcessorTest.java
  visible: false
  text: |
    import org.hyperskill.hstest.stage.StageTest;
    import org.hyperskill.hstest.testcase.CheckResult;
    import org.hyperskill.hstest.testcase.SimpleTestCase;
    import org.hyperskill.hstest.testcase.TestCase;

    import java.util.List;
    import java.util.stream.Collectors;

    public class NumericMatrixProcessorTest extends StageTest {

        @Override
        public List<TestCase> generate() {
            return List.of(
                new SimpleTestCase(
                    "3 3\n" +
                        "1 2 3\n" +
                        "4 5 6\n" +
                        "7 8 9\n" +
                        "3",
                    "3 6 9\n" +
                        "12 15 18\n" +
                        "21 24 27"
                ).setCheckFunc(this::checkSolved),

                new SimpleTestCase(
                    "2 3\n" +
                        "1 2 3\n" +
                        "4 5 6\n" +
                        "0",
                    "0 0 0\n" +
                        "0 0 0"
                ).setCheckFunc(this::checkSolved),

                new SimpleTestCase(
                    "5 5\n" +
                        "1 4 6 7 8\n" +
                        "1 9 5 2 2\n" +
                        "1 4 3 5 7\n" +
                        "1 4 6 4 1\n" +
                        "1 4 5 7 1\n" +
                        "5",
                    "5 20 30 35 40\n" +
                        "5 45 25 10 10\n" +
                        "5 20 15 25 35\n" +
                        "5 20 30 20 5\n" +
                        "5 20 25 35 5"
                ).setCheckFunc(this::checkSolved),

                new SimpleTestCase(
                    "1 1\n" +
                        "1\n" +
                        "1",
                    "1"
                ).setCheckFunc(this::checkSolved),

                new SimpleTestCase(
                    "1 1\n" +
                        "0\n" +
                        "1",
                    "0"
                ).setCheckFunc(this::checkSolved),

                new SimpleTestCase(
                    "3 2\n" +
                        "1 2\n" +
                        "8 1\n" +
                        "9 1\n" +
                        "10",
                    "10 20\n" +
                        "80 10\n" +
                        "90 10"
                ).setCheckFunc(this::checkSolved)
            );
        }

        private CheckResult checkSolved(String reply, String clue) {

            clue = clue.strip();
            reply = reply.strip();

            if (reply.equals(clue)) {
                return CheckResult.correct();
            }

            if (clue.equals("ERROR")) {
                return CheckResult.wrong("");
            }

            List<String> user = reply.lines().collect(Collectors.toList());
            List<String> answ = clue.lines().collect(Collectors.toList());

            if (user.size() != answ.size()) {
                return CheckResult.wrong("");
            }

            for (int i = 0; i < user.size(); i++) {
                String userLine = user.get(i).strip();
                String answLine = answ.get(i).strip();
                if (!userLine.equals(answLine)) {
                    return CheckResult.wrong("");
                }
            }

            return new CheckResult(true);
        }
    }
  learner_created: false
- name: src/processor/ConsolePrinter.java
  visible: true
  text: |
    package processor;

    public class ConsolePrinter {

        public static void printMatrix(int[][] matrix) {
            var rowSize = matrix.length;
            var columnSize = matrix[0].length;

            for (int i = 0; i < rowSize; i++) {
                for (int j = 0; j < columnSize; j++) {
                    System.out.print(matrix[i][j]);
                    if (j + 1 < columnSize) {
                        System.out.print(" ");
                    }
                }
                if (i + 1 < rowSize) {
                    System.out.println();
                }
            }
        }
    }
  learner_created: true
- name: src/processor/Cli.java
  visible: true
  text: |
    package processor;

    import java.util.Scanner;

    public class Cli {

        public static int[][] getMatrix() {
            Scanner scanner = new Scanner(System.in);

            int rowSize = scanner.nextInt();

            int columnSize = scanner.nextInt();

            int[][] matrix = new int[rowSize][columnSize];
            for (int i = 0; i < rowSize; i++) {
                for (int j = 0; j < columnSize; j++) {
                    matrix[i][j] = scanner.nextInt();
                }
            }

            return matrix;
        }
    }
  learner_created: true
- name: src/processor/MatrixCalculator.java
  visible: true
  text: |
    package processor;

    import processor.exception.SizeDontMatchException;

    public class MatrixCalculator {

        public static int[][] sumMatrix(int[][] matrix1, int[][] matrix2) {

            if (matrix1.length != matrix2.length || matrix1[0].length != matrix2[0].length) {
                throw new SizeDontMatchException();
            }

            final int rowSize = matrix1.length;
            final int columnSize = matrix1[0].length;
            int[][] result = new int[rowSize][columnSize];

            for (int i = 0; i < rowSize; i++) {
                for (int j = 0; j < columnSize; j++) {
                    result[i][j] = matrix1[i][j] + matrix2[i][j];
                }
            }

            return result;
        }
    }
  learner_created: true
- name: src/processor/exception/SizeDontMatchException.java
  visible: true
  text: |
    package processor.exception;

    public class SizeDontMatchException extends RuntimeException {

    }
  learner_created: true
feedback_link: https://hyperskill.org/projects/60/stages/324/implement#comment
status: Solved
feedback:
  message: Congratulations!
  time: Sat, 28 Aug 2021 12:31:05 UTC
record: 2
